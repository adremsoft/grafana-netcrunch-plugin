'use strict';System.register(['./networkAtlas'],function(_export,_context){'use strict';var NetCrunchNetworkAtlas;function NetCrunchNetworkData(a,b){function c(j,k,l,m){var n=new a.RemoteDataListStore('ncSrv',1e3,b),o=this;return new Promise(function(p){'function'==typeof l&&n.on('record-changed',function(q){null!=n.data&&0<n.data.length&&q.forEach(l,o)}),'function'==typeof m&&n.on('changed',function(){m()}),n.open(j,k,function(){p()})})}function d(j){f.addNode(j)}function e(j){f.addMap(j)}var f=new NetCrunchNetworkAtlas(b),g={},h={},i=null;return g.promise=new Promise(function(j){return g.resolve=j}),h.promise=new Promise(function(j){return h.resolve=j}),{nodes:function nodes(){return g.promise},networks:function networks(){return h.promise},atlas:function atlas(){return Promise.all([g.promise,h.promise]).then(function(){return f})},init:function init(){var j=this,k=void 0,l=void 0;return null==i?(k=c('Hosts','Select Id, Name, Address, DeviceType, GlobalDataNode ',d,function(){g.resolve(f.nodes),'function'==typeof j.onNodesChanged&&j.onNodesChanged()}),l=c('Networks','Select NetIntId, DisplayName, HostMapData, IconId, MapType, NetworkData, MapClassTag where (MapClassTag != \'policynet\') && (MapClassTag != \'pnet\') && (MapClassTag != \'dependencynet\') && (MapClassTag != \'issuesnet\') && (MapClassTag != \'all\') && (NetIntId != 2) && (NetIntId != 3)',e,function(){h.resolve(f.atlas),'function'==typeof j.onNetworksChanged&&j.onNetworksChanged()}),i=Promise.all([k,l]),i):i}}}/**
 * @license
 * Copyright AdRem Software. All Rights Reserved.
 *
 * Use of this source code is governed by an Apache License, Version 2.0 that can be
 * found in the LICENSE file.
 *//* eslint-disable func-names, object-shorthand, prefer-template */return{setters:[function(_networkAtlas){NetCrunchNetworkAtlas=_networkAtlas.NetCrunchNetworkAtlas}],execute:function(){_export('NetCrunchNetworkData',NetCrunchNetworkData)}}});
//# sourceMappingURL=networkData.js.map
