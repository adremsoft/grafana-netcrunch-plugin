'use strict';System.register(['../../adrem/module'],function(_export,_context){'use strict';var AdremWebWorker,_createClass,THREAD_WORKER_NODES_NUMBER,webWorkerSingleton,NetCrunchNodesOperations;function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}function sortNodesByNameAndAddress(a){function b(d,e){var f=d.split('.'),g=e.split('.');for(var h=0,j=Math.max(f.length,g.length);h<j;h+=1)if(f[h]!==g[h])return f[h]<g[h]?-1:1;return 0}function c(d,e){return null!=d&&null!=d[e]?d[e]:''}return a.filter(function(d){return null!=d&&null!=d.id&&null!=d.name&&null!=d.address}).sort(function(e,f){var g=c(e,'name').toLowerCase(),h=c(f,'name').toLowerCase(),j=c(e,'address'),k=c(f,'address'),l=0;return''!==g&&''!==h?l=g.localeCompare(h):''===g&&''===h?l=b(j,k):(''!==g&&(l=-1),''!==h&&(l=1)),l})}function getWebWorker(){if(null==webWorkerSingleton){var a=AdremWebWorker.webWorkerBuilder();a.addFunctionCode(sortNodesByNameAndAddress,!0),webWorkerSingleton=a.getWebWorker()}return webWorkerSingleton}return{setters:[function(_adremModule){AdremWebWorker=_adremModule.AdremWebWorker}],execute:function(){_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,'value'in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();THREAD_WORKER_NODES_NUMBER=1e3;webWorkerSingleton=null;_export('NetCrunchNodesOperations',NetCrunchNodesOperations=function(){function NetCrunchNodesOperations(){_classCallCheck(this,NetCrunchNodesOperations)}return _createClass(NetCrunchNodesOperations,null,[{key:'asyncSortByNameAndAddress',value:function asyncSortByNameAndAddress(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];return new Promise(function(b){if(a.length<THREAD_WORKER_NODES_NUMBER){var c=sortNodesByNameAndAddress(a);b(c)}else(function(){var c=[];a.forEach(function(d,e){c.push({id:d.id,name:d.name,address:d.address,index:e})}),getWebWorker().sortNodesByNameAndAddress(c).then(function(d){var e=[];d.forEach(function(f){return e.push(a[f.index])}),b(e)})})()})}},{key:'deviceTypeFilter',value:function deviceTypeFilter(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[],b=arguments[1];return a.filter(function(c){return c.checkDeviceType(b)})}}]),NetCrunchNodesOperations}());_export('NetCrunchNodesOperations',NetCrunchNodesOperations)}}});
//# sourceMappingURL=nodesOperations.js.map
