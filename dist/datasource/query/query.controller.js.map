{"version":3,"sources":["../../../src/datasource/query/query.controller.js"],"names":["QueryCtrl","datasourceURL","PRIVATE_PROPERTIES","uiSegmentSrv","Symbol","scope","nodeMap","nodeSegment","nodeSpinner","nodeFocus","counterName","counterSpinner","counterFocus","counters","NET_CRUNCH_QUERY_CONTROLLER_DI","DEFAULT_NODE_NAME","DEFAULT_COUNTER_DISPLAY_NAME","COUNTERS_SUBMENU_LENGTH","NetCrunchQueryController","$scope","$rootScope","$timeout","$on","variableChanged","Map","createDefaultNodeSegment","localVars","Object","create","processingNode","nodeReady","datasource","nodes","then","updateView","target","nodeID","nodeChanged","processingCounter","counterReady","showOptions","alias","series","min","avg","max","segmentName","segment","cssClass","fake","type","html","value","newSegment","node","nodeSegmentTemplate","iconUrl","name","address","nodeDisplayValue","variableName","expandable","refresh","state","$apply","createVariableSegments","self","getNodeVariables","sort","variable1","variable2","toLocaleString","map","createVariableSegment","variable","createNodeSegments","clear","createNodeSegment","set","concat","all","nodeId","setCounterMenu","counterMenu","hideCounters","updateSelectedCounter","counterDataComplete","targetChanged","getCounters","countersByMonitors","countersMenu","keys","forEach","monitorId","subMenu","text","counter","displayName","subMenuPartsCount","Math","ceil","length","i","startIndex","stopIndex","subMenuNameExtension","subMenuName","push","submenu","slice","countersTable","table","some","isNodeTemplate","nodeNotReady","setNodeSegment","assign","Promise","resolve","find","nodeItem","id","has","get","selectedNodeId","nodeSegmentReady","updateCounterList","panel","scopedVars","rawData","$inject"],"mappings":"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","file":"query.controller.js","sourcesContent":["/**\n * @license\n * Copyright AdRem Software. All Rights Reserved.\n *\n * Use of this source code is governed by an Apache License, Version 2.0 that can be\n * found in the LICENSE file.\n */\n\nimport '../css/query.editor.css!';            // eslint-disable-line\nimport '../directives/ncSpinner.directive';\nimport '../directives/ncFocus.directive';\nimport { QueryCtrl } from 'app/plugins/sdk';  // eslint-disable-line\nimport { datasourceURL } from '../common';\n\nconst\n  PRIVATE_PROPERTIES = {\n    uiSegmentSrv: Symbol('uiSegmentSrv'),\n    scope: Symbol('scope'),\n    nodeMap: Symbol('nodeMap'),\n    nodeSegment: Symbol('nodeSegment'),\n    nodeSpinner: Symbol('nodeSpinner'),\n    nodeFocus: Symbol('nodeFocus'),\n    counterName: Symbol('counterName'),\n    counterSpinner: Symbol('counterSpinner'),\n    counterFocus: Symbol('counterFocus'),\n    counters: Symbol('counters')\n  },\n  NET_CRUNCH_QUERY_CONTROLLER_DI = ['uiSegmentSrv', '$scope', '$rootScope', '$timeout'],\n  DEFAULT_NODE_NAME = 'Select node',\n  DEFAULT_COUNTER_DISPLAY_NAME = 'Select counter',\n  COUNTERS_SUBMENU_LENGTH = 25;\n\nclass NetCrunchQueryController extends QueryCtrl {\n\n  constructor(uiSegmentSrv, $scope, $rootScope, $timeout) {\n    super();\n\n    this[PRIVATE_PROPERTIES.uiSegmentSrv] = uiSegmentSrv;\n    this[PRIVATE_PROPERTIES.scope] = $scope;\n    this[PRIVATE_PROPERTIES.nodeMap] = new Map();\n    this[PRIVATE_PROPERTIES.nodeSegment] = this.createDefaultNodeSegment(DEFAULT_NODE_NAME);\n    this[PRIVATE_PROPERTIES.nodeSpinner] = false;\n    this[PRIVATE_PROPERTIES.nodeFocus] = false;\n    this[PRIVATE_PROPERTIES.counterName] = null;\n    this[PRIVATE_PROPERTIES.counterSpinner] = false;\n    this[PRIVATE_PROPERTIES.counterFocus] = false;\n    this[PRIVATE_PROPERTIES.counters] = [];\n\n    this.localVars = Object.create(null);\n\n    this.processingNode = true;\n    this.nodeReady = false;\n    this.datasource.nodes().then(() => {\n      this.processingNode = false;\n      this.updateView();\n      if (this.target.nodeID != null) {\n        this.nodeChanged(this.target.nodeID);\n      } else {\n        this.nodeFocus = true;\n      }\n    });\n\n    this.processingCounter = true;\n    this.counterReady = false;\n\n    this.showOptions = (this.showOptions == null) ? false : this.showOptions;\n\n    this.target.alias = this.target.alias || '';\n    this.target.series = this.target.series || { min: false, avg: true, max: false };\n\n    $rootScope.$on('template-variable-value-updated', () => $timeout(() => this.variableChanged(), 0));\n  }\n\n  get localVars() {\n    return this.target.localVars;\n  }\n\n  set localVars(value) {\n    this.target.localVars = value;\n  }\n\n  get processingNode() {\n    return this.localVars.processingNode;\n  }\n\n  set processingNode(value) {\n    this.localVars.processingNode = value;\n  }\n\n  get nodeSpinner() {\n    return this[PRIVATE_PROPERTIES.nodeSpinner];\n  }\n\n  get nodeSegment() {\n    return this[PRIVATE_PROPERTIES.nodeSegment];\n  }\n\n  get nodeFocus() {\n    return this[PRIVATE_PROPERTIES.nodeFocus];\n  }\n\n  set nodeFocus(value) {\n    this[PRIVATE_PROPERTIES.nodeFocus] = value;\n  }\n\n  get nodeReady() {\n    return this.localVars.nodeReady;\n  }\n\n  set nodeReady(value) {\n    this.localVars.nodeReady = value;\n  }\n\n  get processingCounter() {\n    return this.localVars.processingCounter;\n  }\n\n  set processingCounter(value) {\n    this.localVars.processingCounter = value;\n  }\n\n  get defaultCounterName() {              // eslint-disable-line\n    return DEFAULT_COUNTER_DISPLAY_NAME;\n  }\n\n  get counterSpinner() {\n    return this[PRIVATE_PROPERTIES.counterSpinner];\n  }\n\n  get counterFocus() {\n    return this[PRIVATE_PROPERTIES.counterFocus];\n  }\n\n  set counterFocus(value) {\n    this[PRIVATE_PROPERTIES.counterFocus] = value;\n  }\n\n  get counterReady() {\n    return this.localVars.counterReady;\n  }\n\n  set counterReady(value) {\n    this.localVars.counterReady = value;\n  }\n\n  get counterName() {\n    return this[PRIVATE_PROPERTIES.counterName];\n  }\n\n  get counters() {\n    return this[PRIVATE_PROPERTIES.counters];\n  }\n\n  get counterDataComplete() {\n    return this.target.counterDataComplete;\n  }\n\n  set counterDataComplete(value) {\n    this.target.counterDataComplete = value;\n  }\n\n  get alias() {\n    return this.target.alias;\n  }\n\n  set alias(value) {\n    this.target.alias = value;\n  }\n\n  get rawData() {\n    return this.panel.scopedVars.rawData;\n  }\n\n  get series() {\n    return this.target.series;\n  }\n\n  get showOptions() {\n    return this.localVars.showOptions;\n  }\n\n  set showOptions(value) {\n    this.localVars.showOptions = value;\n  }\n\n  createDefaultNodeSegment(segmentName) {\n    const segment = {\n      cssClass: 'nc-reset-segment',\n      fake: true,\n      type: 'value',\n      html: `<div class=\"nc-default-tile\">${segmentName}</div>`,\n      value: segmentName\n    };\n    return this[PRIVATE_PROPERTIES.uiSegmentSrv].newSegment(segment);\n  }\n\n  createNodeSegment(node) {\n\n    const nodeSegmentTemplate = `\n      <div class=\"nc-node-tile\">\n        <img class=\"nc-node-icon\" src=${node.iconUrl}>\n        <div class=\"nc-node-description\">\n          <span class=\"nc-node-name\">${node.name}</span>\n          <span class=\"nc-node-address\">${node.address}</span>\n        </div>\n      </div>\n    `;\n\n    return this[PRIVATE_PROPERTIES.uiSegmentSrv].newSegment({\n      cssClass: 'nc-reset-segment',\n      fake: true,\n      type: 'value',\n      html: nodeSegmentTemplate,\n      value: NetCrunchQueryController.nodeDisplayValue(node)\n    });\n  }\n\n  createVariableSegment(variableName) {\n    return this[PRIVATE_PROPERTIES.uiSegmentSrv].newSegment({\n      cssClass: 'nc-reset-segment',\n      expandable: true,\n      fake: true,\n      type: 'template',\n      html: `<div class=\"nc-default-tile\">$${variableName}</div>`,\n      value: `$${variableName}`\n    });\n  }\n\n  targetChanged() {\n    this.refresh();\n  }\n\n  nodeSpinnerChanged(state) {\n    this[PRIVATE_PROPERTIES.nodeSpinner] = state;\n  }\n\n  counterSpinnerChanged(state) {\n    this[PRIVATE_PROPERTIES.counterSpinner] = state;\n  }\n\n  updateView() {\n    this[PRIVATE_PROPERTIES.scope].$apply();\n  }\n\n  getNodes() {\n    const self = this;\n\n    function createVariableSegments() {\n      return self.datasource.getNodeVariables()\n        .sort((variable1, variable2) => variable1.name.toLocaleString(variable2.name))\n        .map(variable => self.createVariableSegment(variable.name));\n    }\n\n    function createNodeSegments(nodes) {\n      self[PRIVATE_PROPERTIES.nodeMap].clear();\n      return nodes.map((node) => {\n        const nodeSegment = self.createNodeSegment(node);\n        self[PRIVATE_PROPERTIES.nodeMap].set(nodeSegment.value, node);\n        return nodeSegment;\n      });\n    }\n\n    return this.datasource\n      .nodes().then(nodes => []\n        .concat(createVariableSegments())\n        .concat(createNodeSegments(nodes.all)));\n  }\n\n  updateCounterList(nodeId = this.target.nodeID) {\n    const self = this;\n\n    function setCounterMenu(counterMenu) {\n      self.hideCounters = true;\n      self.updateView();\n      self[PRIVATE_PROPERTIES.counters] = counterMenu;\n      self.processingCounter = false;\n      self.hideCounters = false;\n    }\n\n    function updateSelectedCounter(counterName) {\n      self[PRIVATE_PROPERTIES.counterName] = counterName;\n      self.counterReady = true;\n      self.counterDataComplete = true;\n      self.targetChanged();\n    }\n\n    function getCounters(nodeId) {               // eslint-disable-line\n      return self.datasource.getCounters(nodeId)\n        .then((countersByMonitors) => {\n          const countersMenu = [];\n\n          Object.keys(countersByMonitors).forEach((monitorId) => {\n            if (monitorId > 0) {\n              const\n                subMenu = countersByMonitors[monitorId]\n                  .counters.map(counter => ({\n                    text: counter.displayName,\n                    value: counter.name\n                  })),\n                subMenuPartsCount = Math.ceil(subMenu.length / COUNTERS_SUBMENU_LENGTH);\n\n              for (let i = 0; i < subMenuPartsCount; i += 1) {\n                const\n                  startIndex = i * COUNTERS_SUBMENU_LENGTH,\n                  stopIndex = Math.min((i + 1) * COUNTERS_SUBMENU_LENGTH, subMenu.length),\n                  subMenuNameExtension = (subMenuPartsCount > 1) ? ` [${startIndex + 1}..${stopIndex}]` : '',\n                  subMenuName = `${countersByMonitors[monitorId].name}${subMenuNameExtension}`;\n\n                countersMenu.push({\n                  text: subMenuName,\n                  submenu: subMenu.slice(startIndex, stopIndex)\n                });\n              }\n            }\n          });\n\n          return {\n            countersMenu,\n            countersTable: countersByMonitors.table\n          };\n        });\n    }\n\n    this.processingCounter = true;\n    this.counterReady = false;\n    this.counterDataComplete = false;\n    this.updateView();\n\n    getCounters(nodeId)\n      .then((counters) => {\n        setCounterMenu(counters.countersMenu);\n        if (counters.countersTable.some(counter => (counter.name === this.target.counterName))) {\n          updateSelectedCounter(this.target.counterName);\n        } else {\n          this.targetChanged();\n          this.counterFocus = true;\n        }\n      });\n  }\n\n  nodeChanged(nodeId = null) {\n    const self = this;\n\n    function isNodeTemplate(nodeId) {            // eslint-disable-line\n      return self.datasource.isNodeTemplate(nodeId);\n    }\n\n    function nodeNotReady() {\n      self.nodeReady = false;\n      self.processingCounter = true;\n      self.counterReady = false;\n      self.counterDataComplete = false;\n    }\n\n    function setNodeSegment(nodeId) {            // eslint-disable-line\n\n      if (isNodeTemplate(nodeId)) {\n        Object.assign(self[PRIVATE_PROPERTIES.nodeSegment], self.createVariableSegment(nodeId.slice(1)));\n        self.updateView();\n        return Promise.resolve();\n      }\n\n      return self.datasource\n        .nodes().then((nodes) => {\n          const node = nodes.all.find(nodeItem => (nodeItem.id === nodeId));\n          Object.assign(self[PRIVATE_PROPERTIES.nodeSegment], self.createNodeSegment(node));\n          self.updateView();\n        });\n    }\n\n    function getSelectedNode(nodeId) {           // eslint-disable-line\n\n      if (nodeId != null) {\n        if (isNodeTemplate(nodeId)) {\n          return Promise.resolve(nodeId);\n        }\n        return self.datasource\n          .nodes()\n          .then(nodes => ((nodes.all.some(node => (nodeId === node.id))) ? nodeId : null));\n      } else if (isNodeTemplate(self.nodeSegment.value)) {\n        return Promise.resolve(self.nodeSegment.value);\n      } else if (self[PRIVATE_PROPERTIES.nodeMap].has(self.nodeSegment.value)) {\n        return Promise.resolve(self[PRIVATE_PROPERTIES.nodeMap].get(self.nodeSegment.value).id);\n      }\n\n      return Promise.resolve(null);\n    }\n\n    getSelectedNode(nodeId).then((selectedNodeId) => {\n      this.target.nodeID = selectedNodeId;\n\n      if (selectedNodeId == null) {\n        nodeNotReady();\n        Object.assign(this[PRIVATE_PROPERTIES.nodeSegment], this.createDefaultNodeSegment(DEFAULT_NODE_NAME));\n        this.targetChanged();\n      } else {\n        const nodeSegmentReady = (nodeId != null) ? setNodeSegment(nodeId) : Promise.resolve();\n\n        this.nodeReady = true;\n        this.processingCounter = true;\n        this.counterReady = false;\n        this.updateView();\n\n        nodeSegmentReady\n          .then(() => self.updateCounterList(selectedNodeId));\n      }\n    });\n  }\n\n  counterChanged(counter) {\n    this[PRIVATE_PROPERTIES.counterName] = counter.value;\n    this.target.counterName = counter.value;\n    this.counterDataComplete = true;\n    this.targetChanged();\n  }\n\n  toggleShowOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  variableChanged() {\n    this.updateCounterList();\n  }\n\n  static nodeDisplayValue(node) {\n    if ((node.name != null) && (node.name !== '')) {\n      return `${node.name}${(((node.address != null) && (node.address !== '')) ? ` (${node.address})` : '')}`;\n    } else if ((node.address != null) && (node.address !== '')) {\n      return node.address;\n    }\n    return '';\n  }\n\n  static get templateUrl() {\n    return `${datasourceURL}query/query.editor.html`;\n  }\n\n}\n\nNetCrunchQueryController.$inject = NET_CRUNCH_QUERY_CONTROLLER_DI;\n\nexport {\n  NetCrunchQueryController\n};\n"]}