{"version":3,"sources":["../../../src/datasource/query/queryOptions.controller.js"],"names":["datasourceURL","NetCrunchQueryOptionsController","MAX_SAMPLE_COUNT","datasource","setDefaults","checkMaxDataPoints","DEFAULT_QUERY_OPTIONS","maxDataPoints","DEFAULT","rawData","setMaxDataPoints","panel","scopedVars","Object","keys","forEach","option","MIN","MAX","panelCtrl","refresh"],"mappings":"kUAQSA,a,SAAAA,a,4iBAEHC,+B,YAEJ,0CAAc,uDACZ,KAAKC,gBAAL,CAAwB,KAAKC,UAAL,CAAgBD,gBAD5B,CAEZ,KAAKE,WAAL,EAFY,CAGZ,KAAKC,kBAAL,EACD,C,oGAUa,gBAEVC,EAAwB,CACtBC,cAAe,KAAKL,gBAAL,CAAsBM,OADf,CAEtBC,UAFsB,CAGtBC,mBAHsB,CAFd,CAQiB,IAAzB,OAAKC,KAAL,CAAWC,UARH,CASV,KAAKD,KAAL,CAAWC,UAAX,CAAwBN,CATd,CAWVO,OAAOC,IAAP,CAAYR,CAAZ,EACGS,OADH,CACW,SAACC,CAAD,CAAY,CACkB,IAAjC,QAAKL,KAAL,CAAWC,UAAX,CAAsBI,CAAtB,CADe,GAEjB,MAAKL,KAAL,CAAWC,UAAX,CAAsBI,CAAtB,EAAgCV,EAAsBU,CAAtB,CAFf,CAIpB,CALH,CAOH,C,+DAEoB,CACnB,GAAMJ,GAAa,KAAKD,KAAL,CAAWC,UAA9B,CACOA,EAAWL,aAAX,EAA4B,KAAKL,gBAAL,CAAsBe,GAAnD,EACCL,EAAWL,aAAX,EAA4B,KAAKL,gBAAL,CAAsBgB,GAHtC,GAIjBN,EAAWL,aAAX,CAA2B,KAAKL,gBAAL,CAAsBM,OAJhC,CAMpB,C,iEAEqB,CACpB,KAAKW,SAAL,CAAeC,OAAf,EACD,C,sCAtCgB,CACf,MAAO,MAAKD,SAAL,CAAehB,UACvB,C,iCAEW,CACV,MAAO,MAAKgB,SAAL,CAAeR,KACvB,C,yCAkCwB,CACvB,MAAUX,cAAV,2BACD,C,kFAKDC,+B","file":"queryOptions.controller.js","sourcesContent":["/**\r\n * @license\r\n * Copyright AdRem Software. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an Apache License, Version 2.0 that can be\r\n * found in the LICENSE file.\r\n */\r\n\r\nimport { datasourceURL } from '../common';\r\n\r\nclass NetCrunchQueryOptionsController {\r\n\r\n  constructor() {\r\n    this.MAX_SAMPLE_COUNT = this.datasource.MAX_SAMPLE_COUNT;\r\n    this.setDefaults();\r\n    this.checkMaxDataPoints();\r\n  }\r\n\r\n  get datasource() {\r\n    return this.panelCtrl.datasource;\r\n  }\r\n\r\n  get panel() {\r\n    return this.panelCtrl.panel;\r\n  }\r\n\r\n  setDefaults() {\r\n    const\r\n      DEFAULT_QUERY_OPTIONS = {\r\n        maxDataPoints: this.MAX_SAMPLE_COUNT.DEFAULT,\r\n        rawData: false,\r\n        setMaxDataPoints: false\r\n      };\r\n\r\n    if (this.panel.scopedVars == null) {\r\n      this.panel.scopedVars = DEFAULT_QUERY_OPTIONS;\r\n    } else {\r\n      Object.keys(DEFAULT_QUERY_OPTIONS)\r\n        .forEach((option) => {\r\n          if (this.panel.scopedVars[option] == null) {\r\n            this.panel.scopedVars[option] = DEFAULT_QUERY_OPTIONS[option];\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  checkMaxDataPoints() {\r\n    const scopedVars = this.panel.scopedVars;\r\n    if (!((scopedVars.maxDataPoints >= this.MAX_SAMPLE_COUNT.MIN) &&\r\n          (scopedVars.maxDataPoints <= this.MAX_SAMPLE_COUNT.MAX))) {\r\n      scopedVars.maxDataPoints = this.MAX_SAMPLE_COUNT.DEFAULT;\r\n    }\r\n  }\r\n\r\n  metricOptionsChange() {\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  static get templateUrl() {\r\n    return `${datasourceURL}query/query.options.html`;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  NetCrunchQueryOptionsController\r\n};\r\n"]}